<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 这里定义JPA相关配置。总体上来说，这里使用以Hibernate为Provider的JPA2.0方案，使用Spring来进行集成，不依赖于容器的JPA实现。 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{env['jdbcDriver']}" />
		<property name="testOnBorrow" value="#{env['jdbcTestOnBorrow']?: true}" />
		<property name="testOnReturn" value="#{env['jdbcTestOnReturn']?: false}" />
		<property name="testWhileIdle" value="#{env['jdbcTestWhileIdle']?: false}" />
		<property name="validationQuery" value="#{env['jdbcTestSql']}" />
		<property name="maxActive" value="#{env['jdbcMaxActive'] ?: 20}" />
		<property name="maxIdle" value="#{env['jdbcMaxIdle'] ?: 10 }" />
		<property name="minIdle" value="#{env['jdbcMinIdle'] ?: 2 }" />
		<property name="minEvictableIdleTimeMillis" value="#{env['jdbcMinEvictableIdleTimeMillis'] ?: 1800000}" />
		<property name="url" value="#{env.jdbcUrl}" />
		<property name="username" value="#{env.jdbcUsername}" />
		<property name="password" value="#{env.jdbcPassword}" />
	</bean>

	<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<description>
			定义EntityManagerFactory，用于Spring控制事务。
			具体的Hibernate配置在persistence.xml中控制，包括JPA
			Provider和Hibernate的各种参数（不含组件扫描)。
		</description>
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="default" />
		<property name="packagesToScan">
			<list>
				<value>com.sunline.**.infrastructure.shared.model</value>
			</list>
		</property>
		<!-- <property name="persistenceProvider" ref="hibernatePersistenceProvider" /> -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="DEFAULT" />
				<property name="generateDdl" value="false" />
				<property name="showSql" value="false" />
			</bean>
		</property>
	</bean>

	<!-- 事务设置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>

	<!-- 事务使用AspectJ进行编译时Weave -->
	<tx:annotation-driven mode="aspectj" />

	<!-- Spring Data -->
	<jpa:repositories base-package="com.sunline.**.infrastructure.server.repos" />
</beans>
