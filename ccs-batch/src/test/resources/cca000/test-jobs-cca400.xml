<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans default-lazy-init="false"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<!-- 导入步骤定义 -->
	<import resource="test-steps-cca400.xml"/>
	<import resource="test-steps-cca-general.xml"/>

	<!-- 用于支持并发批量的线程池 -->
	<task:executor id="asyncTaskExecutor" pool-size="#{env['batchTaskPoolSize'] ?: 16}"/>
	<batch:job id="SA400Job">
	
		<!-- 生成短信文件,发送给通知平台 -->
        <batch:step id="cca301MSLoanMsg" next="cca302WhiteListMsg">
			<batch:description>马上贷还款提醒短信文件</batch:description>
			<batch:partition partitioner="ra301">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra301" processor="pa301" writer="wa301"  commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		
		<batch:step id="cca302WhiteListMsg" next="cca303PrepayRemainMsg">
			<batch:description>白名单还款提醒短信文件</batch:description>
			<batch:partition partitioner="ra302">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra302" processor="pa302" writer="wa302"  commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		
		<batch:step id="cca303PrepayRemainMsg" next="cca304RefundMsg">
			<batch:description>提前还款提醒短信</batch:description>
			<batch:partition partitioner="ra303">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra303" processor="pa303" writer="wa303"  commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		
		<batch:step id="cca304RefundMsg" next="cca305BatchCutSuccessMsg">
			<batch:description>退货欠款提醒短信</batch:description>
			<batch:partition partitioner="ra304">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra304" processor="pa304" writer="wa304"  commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		<!-- 批量扣款成功通知客户短信 by lizz 20160308-->
		<batch:step id="cca305BatchCutSuccessMsg" next="cca300FileMerge">
			<batch:description>批量扣款成功通知客户短信</batch:description>
			<batch:partition partitioner="ra305">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra305" processor="pa305" writer="wa305"  commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		
		<batch:step id="cca300FileMerge" next="cca401SettleReplaceFee">
			<batch:tasklet ref="ma300" />
		</batch:step>
		<!-- 结算文件  开始  -->
		<batch:step id="cca401SettleReplaceFee" next="cca402SettlePremiumAmt">
			<batch:description>结算代收费记录</batch:description> 
			<batch:partition partitioner="ra401">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra401" writer="wa401" commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
		
		<batch:step id="cca402SettlePremiumAmt" next="cca408SettleFile">
			<batch:description>结算趸交费记录</batch:description>
			<batch:partition partitioner="ra402">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
					<batch:tasklet>
						<batch:chunk reader="ra402" writer="wa402" commit-interval="#{env['commitInterval'] ?: 100}" />
					</batch:tasklet>
				</batch:step>
			</batch:partition>
		</batch:step>
        
        <batch:step id="cca408SettleFile" next="cca400FileMerge">
        	<batch:description>结算文件生成</batch:description>
        	<batch:partition partitioner="ra408">
				<batch:handler grid-size="#{env['GridSize']?:16}" task-executor="asyncTaskExecutor"/>
				<batch:step>
		        	<batch:tasklet>
		        		<batch:chunk reader="ra408" writer="wa408" commit-interval="#{env['commitInterval'] ?: 100}" />
		        	</batch:tasklet>
				</batch:step>
			</batch:partition>
        </batch:step>
        
        <batch:step id="cca400FileMerge" next="cca910MergeSmsFile">
    		<batch:tasklet ref="ma400" />    
	    </batch:step>	
	    
		<batch:step id="cca910MergeSmsFile" >
        	<batch:tasklet ref="mergeSmsFile"/>
        </batch:step>
	</batch:job>
</beans>
